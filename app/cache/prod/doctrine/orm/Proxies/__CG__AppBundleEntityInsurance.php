<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Insurance extends \AppBundle\Entity\Insurance implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'insurance_name', 'type', 'buy_date', 'insurance_premium', 'sum_insured', 'policy_holder', 'recognizee', 'age_at_issue', 'years', 'born_date', 'gender', 'is_smoking', 'next_pay_date', 'user');
        }

        return array('__isInitialized__', 'id', 'insurance_name', 'type', 'buy_date', 'insurance_premium', 'sum_insured', 'policy_holder', 'recognizee', 'age_at_issue', 'years', 'born_date', 'gender', 'is_smoking', 'next_pay_date', 'user');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Insurance $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsuranceName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsuranceName', array());

        return parent::getInsuranceName();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsuranceName($insurance_name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsuranceName', array($insurance_name));

        return parent::setInsuranceName($insurance_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getBuyDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBuyDate', array());

        return parent::getBuyDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBuyDate(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBuyDate', array($date));

        return parent::setBuyDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsurancePremium()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsurancePremium', array());

        return parent::getInsurancePremium();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsurancePremium($insurance_preminum)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsurancePremium', array($insurance_preminum));

        return parent::setInsurancePremium($insurance_preminum);
    }

    /**
     * {@inheritDoc}
     */
    public function getSumInsured()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSumInsured', array());

        return parent::getSumInsured();
    }

    /**
     * {@inheritDoc}
     */
    public function setSumInsured($sum_insured)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSumInsured', array($sum_insured));

        return parent::setSumInsured($sum_insured);
    }

    /**
     * {@inheritDoc}
     */
    public function getPolicyHolder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPolicyHolder', array());

        return parent::getPolicyHolder();
    }

    /**
     * {@inheritDoc}
     */
    public function setPolicyHolder($policy_holder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPolicyHolder', array($policy_holder));

        return parent::setPolicyHolder($policy_holder);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecognizee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecognizee', array());

        return parent::getRecognizee();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecognizee($recognizee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecognizee', array($recognizee));

        return parent::setRecognizee($recognizee);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeAtIssue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeAtIssue', array());

        return parent::getAgeAtIssue();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeAtIssue($age_at_issue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeAtIssue', array($age_at_issue));

        return parent::setAgeAtIssue($age_at_issue);
    }

    /**
     * {@inheritDoc}
     */
    public function getYears()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYears', array());

        return parent::getYears();
    }

    /**
     * {@inheritDoc}
     */
    public function setYears($years)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYears', array($years));

        return parent::setYears($years);
    }

    /**
     * {@inheritDoc}
     */
    public function getBornDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBornDate', array());

        return parent::getBornDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBornDate(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBornDate', array($date));

        return parent::setBornDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', array());

        return parent::getGender();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', array($gender));

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function IsSmoking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'IsSmoking', array());

        return parent::IsSmoking();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSmoking($is_smoking = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSmoking', array($is_smoking));

        return parent::setIsSmoking($is_smoking);
    }

    /**
     * {@inheritDoc}
     */
    public function getNextPayDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNextPayDate', array());

        return parent::getNextPayDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setNextPayDate(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNextPayDate', array($date));

        return parent::setNextPayDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\AppBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
